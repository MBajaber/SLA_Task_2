{"version":3,"sources":["Components/AccordionTable/AccordionTableRow/AccordionTableRow.js","Components/AccordionTable/AccordionTable.js","Components/AccordionTable/AccordionTableSm/AccordionTableRowSm/AccordionTableRowSm.js","Components/AccordionTable/AccordionTableSm/AccordionTableSm.js","Components/AccordionTable/AccordionTableSm/AllAccordionTableSm.js","Containers/History/SidebarSM/SidebarSM.js","Containers/History/History.js"],"names":["useStyles","makeStyles","theme","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","Row","index","user","startTime","updateDate","workProcess","useState","open","setOpen","myContext","useContext","MyContext","classes","TableRow","TableCell","IconButton","aria-label","size","onClick","color","align","style","direction","dateTime","getDate","arabicMonths","getMonth","getFullYear","formatAMPM","username","toLowerCase","address","street","split","zipcode","paddingBottom","paddingTop","className","colSpan","Collapse","in","timeout","unmountOnExit","Timeline","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","Typography","variant","component","englishMonths","slice","AccordionTable","dataUsers","showAccor","startTimeContext","endTimeContext","workProcessState","data","allDates","map","date","Date","endTime","filter","e","TableContainer","Table","TableHead","TableBody","length","openValue","setOpenValue","useEffect","undefined","Object","keys","AccordionTableSm","AllAccordionTableSm","SidebarSM","changeHandler","checked","role","List","FormControl","NativeSelect","value","onChange","event","name","target","inputProps","Set","work","FormControlLabel","control","Checkbox","label","History","setWorkProcess","setStartTime","setEndTime","setChecked","setDataUsers","isLoader","setIsLoader","left","drawer","setDrawer","mount","fetch","then","response","json","responseJson","catch","error","alert","toggleDrawer","type","key","resultsHandler","setWorkProcessState","setStartTimeContext","setEndTimeContext","resetHandler","Drawer","onClose","onKeyDown","Button","minHeight","Loader","smallSize"],"mappings":"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","file":"static/js/5.1e4e9613.chunk.js","sourcesContent":["import React, { useState, Fragment, useContext } from 'react';\r\nimport { BsFillArrowUpCircleFill, BsArrowDownCircle ,BsCheckCircle } from 'react-icons/bs';\r\n                                    \r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport './AccordionTableRow.scss';\r\n\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MyContext } from '../../../context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nfunction Row({ index, user, startTime, updateDate, workProcess }) {\r\n  const [open, setOpen] = useState(index === 0);\r\n  const myContext = useContext(MyContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <BsFillArrowUpCircleFill color='#5CD5C4' size={24} /> : <BsArrowDownCircle color='#5CD5C4' size={24} />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"right\"><BsCheckCircle size={22} color='#5CD5C4' /></TableCell>\r\n        <TableCell align=\"right\">\r\n          <bdi style={{direction: 'rtl'}}>\r\n            <time dateTime={updateDate}>{`${updateDate.getDate()} ${myContext.arabicMonths[updateDate.getMonth()]} ${updateDate.getFullYear()} , ${myContext.formatAMPM(updateDate)}`}</time>\r\n          </bdi>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <bdi style={{direction: 'rtl'}}>\r\n            <time dateTime={startTime}>{`${startTime.getDate()} ${myContext.arabicMonths[startTime.getMonth()]} ${startTime.getFullYear()} , ${myContext.formatAMPM(startTime)}`}</time>\r\n          </bdi>\r\n        </TableCell>\r\n        <TableCell align=\"right\">{user.username.toLowerCase()}</TableCell>\r\n        <TableCell align=\"right\">{`id-${user.address.street.split(' ')[0].toLowerCase()}${user.address.zipcode.split('-')[0]}`}</TableCell>\r\n        <TableCell align=\"right\">{workProcess}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} className='table_body' colSpan={7}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <div className='table_body_in'>\r\n                <div className='table_body_code'>\r\n                  <h4 className='table_body_title'>تشغيل سيرة العمل</h4>\r\n                  <div className='code_box'>\r\n                    <pre className='code'>\r\n<span>{`#version 430 core`}</span>\r\n{`\r\nlayout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;\r\nstruct Vert \r\n{\r\n  vec4 position;\r\n  vec4 normal;\r\n  vec2 texCoord;\r\n};\r\nlayout (std430, binding = 0)  buffer gOutput\r\n{\r\n  Vert verts[];\r\n};\r\nvoid main(void){\r\n  //uint meshX =  gl_WorkGroupID.x * gl_WorkGroupSize.x + \r\n`}\r\n                    </pre>\r\n                  </div>\r\n                </div>\r\n                <div className='table_body_summery'>\r\n                  <h4 className='table_body_title'>الملخص</h4>\r\n                  <Timeline align=\"right\">\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={startTime}>{`${myContext.englishMonths[startTime.getMonth()].slice(0, 3)} ${startTime.getDate()}, ${myContext.formatAMPM(startTime).split(' ')[0]} ${myContext.formatAMPM(startTime).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تم إدخال سير العمل من المعاملة</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={startTime}>{`${myContext.englishMonths[startTime.getMonth()].slice(0, 3)} ${startTime.getDate()}, ${myContext.formatAMPM(startTime).split(' ')[0]} ${myContext.formatAMPM(startTime).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تطابق كل شئ إخر الطريق</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={updateDate}>{`${myContext.englishMonths[updateDate.getMonth()].slice(0, 3)} ${updateDate.getDate()}, ${myContext.formatAMPM(updateDate).split(' ')[0]} ${myContext.formatAMPM(updateDate).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تم إنتهاء دون أخذ إجراء</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                  </Timeline>\r\n                </div>\r\n              </div>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </Fragment>\r\n  )\r\n}   \r\n\r\nexport default Row;\r\n","import React,{ useContext } from 'react';\r\nimport './AccordionTable.scss';\r\nimport Row from './AccordionTableRow/AccordionTableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport data from '../../data.json';\r\nimport { MyContext } from '../../context';\r\n\r\nfunction AccordionTable({ dataUsers }) {\r\n    const myContext = useContext(MyContext);\r\n\r\n    function showAccor() {\r\n        if(myContext.startTimeContext === '' && myContext.endTimeContext === '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n\r\n        } else if(myContext.startTimeContext !== '' && myContext.endTimeContext !== '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n\r\n        } else if(myContext.startTimeContext !== '' && myContext.endTimeContext === '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n            \r\n        } else if(myContext.startTimeContext === '' && myContext.endTimeContext !== '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n                \r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n        } else {\r\n            return data.allDates\r\n            .map((date,index) => <Row key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='history_accordion'>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\" /> \r\n                            <TableCell align=\"right\">الحالة</TableCell>\r\n                            <TableCell align=\"right\">أخر تحديث</TableCell>\r\n                            <TableCell align=\"right\">بداية الوقت</TableCell>\r\n                            <TableCell align=\"right\">إجراء</TableCell>\r\n                            <TableCell align=\"right\">كيان</TableCell>\r\n                            <TableCell align=\"right\">سير العمل</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {showAccor()}\r\n                    {showAccor().length === 0 && (<tr><td></td><td></td><td></td><td className='no_item'>...لا يوجد عناصر</td><td></td><td></td><td></td></tr>)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccordionTable\r\n","import React, { useState, Fragment, useEffect, useContext } from 'react';\r\nimport { BsCheckCircle } from 'react-icons/bs';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport './AccordionTableRowSm.scss';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MyContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nfunction Row({ user, startTime, updateDate, open }) {\r\n  const [openValue, setOpenValue] = useState(open);\r\n  const myContext = useContext(MyContext);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => setOpenValue(open), [open]);\r\n\r\n  return user !== undefined && Object.keys(user).length > 0 ? (\r\n    <Fragment>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} className='table_body' colSpan={1}>\r\n          <Collapse in={openValue} timeout=\"auto\" unmountOnExit>\r\n              <div className='table_body_in_sm'>\r\n                <ul className='show_list'>\r\n                  <li>\r\n                    <span className='text'>{`id-${user.address.street.split(' ')[0].toLowerCase()}${user.address.zipcode.split('-')[0]}`}</span>\r\n                    <span className='show_list_title'>كيان</span>\r\n                  </li>\r\n                  <li>\r\n                    <span className='text'>{user.username.toLowerCase()}</span>\r\n                    <span className='show_list_title'>إجراء</span>\r\n                  </li>\r\n                  <li>\r\n                    <span className='text'>\r\n                    <bdi style={{direction: 'rtl'}}>\r\n                      <time dateTime={startTime}>{`${startTime.getDate()} ${myContext.arabicMonths[startTime.getMonth()]} ${startTime.getFullYear()} , ${myContext.formatAMPM(startTime)}`}</time>\r\n                    </bdi>\r\n                    </span>\r\n                    <span className='show_list_title'>بداية الوقت</span>\r\n                  </li>\r\n                  <li>\r\n                    <span className='text'>\r\n                    <bdi style={{direction: 'rtl'}}>\r\n                      <time dateTime={updateDate}>{`${updateDate.getDate()} ${myContext.arabicMonths[updateDate.getMonth()]} ${updateDate.getFullYear()} , ${myContext.formatAMPM(updateDate)}`}</time>\r\n                    </bdi>\r\n                    </span>\r\n                    <span className='show_list_title'>أخر تحديث</span>\r\n                  </li>\r\n                  <li>\r\n                    <span className='text'><BsCheckCircle size={22} color='#5CD5C4' /></span>\r\n                    <span className='show_list_title'>الحالة</span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div className='table_body_summery'>\r\n                  <h4 className='table_body_title'>الملخص</h4>\r\n                  <Timeline align=\"right\">\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={startTime}>{`${myContext.englishMonths[startTime.getMonth()].slice(0, 3)} ${startTime.getDate()}, ${myContext.formatAMPM(startTime).split(' ')[0]} ${myContext.formatAMPM(startTime).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تم إدخال سير العمل من المعاملة</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={startTime}>{`${myContext.englishMonths[startTime.getMonth()].slice(0, 3)} ${startTime.getDate()}, ${myContext.formatAMPM(startTime).split(' ')[0]} ${myContext.formatAMPM(startTime).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تطابق كل شئ إخر الطريق</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                    <TimelineItem>\r\n                      <TimelineSeparator>\r\n                        <TimelineDot />\r\n                        <TimelineConnector />\r\n                      </TimelineSeparator>\r\n                      <TimelineContent>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Typography variant=\"h6\" component=\"span\">\r\n                            <time dateTime={updateDate}>{`${myContext.englishMonths[updateDate.getMonth()].slice(0, 3)} ${updateDate.getDate()}, ${myContext.formatAMPM(updateDate).split(' ')[0]} ${myContext.formatAMPM(updateDate).split(' ')[1] === 'ص' ? 'am' : `pm`}`}</time>\r\n                          </Typography>\r\n                          <Typography>تم إنتهاء دون أخذ إجراء</Typography>\r\n                        </Paper>\r\n                      </TimelineContent>\r\n                    </TimelineItem>\r\n                  </Timeline>\r\n                </div>\r\n                <div className='table_body_code'>\r\n                  <h4 className='table_body_title'>تشغيل سيرة العمل</h4>\r\n                  <div className='code_box'>\r\n                    <pre className='code'>\r\n<span>{`#version 430 core`}</span>\r\n{`\r\nlayout(local_size_x = 1, local_size_y = 1,\r\nlocal_size_z = 1) in;\r\nstruct Vert \r\n{\r\n  vec4 position;\r\n  vec4 normal;\r\n  vec2 texCoord;\r\n};\r\nlayout (std430, binding = 0)  buffer gOutput\r\n{\r\n  Vert verts[];\r\n};\r\nvoid main(void){\r\n  //uint meshX =  gl_WorkGroupID.x *\r\n  gl_WorkGroupSize.x + \r\n}`}\r\n                    </pre>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </Fragment>\r\n  ) : null;\r\n}   \r\n\r\nexport default Row;\r\n","import React, { useState } from 'react';\r\nimport './AccordionTableSm.scss';\r\nimport RowSM from './AccordionTableRowSm/AccordionTableRowSm';\r\nimport { BsFillArrowUpCircleFill, BsArrowDownCircle } from 'react-icons/bs';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\nfunction AccordionTableSm({ index, user, startTime, updateDate, workProcess }) {\r\n    const [open, setOpen] = useState(index === 0);\r\n    return (\r\n        <div className='history_accordion_sm'>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow className='second_cell'>\r\n                            <TableCell align=\"right\" className='taple_title with_icon'>\r\n                                <h4>{workProcess}</h4>\r\n                                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                                    {open ? <BsFillArrowUpCircleFill color='#5CD5C4' size={24} /> : <BsArrowDownCircle color='#5CD5C4' size={24} />}\r\n                                </IconButton>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\" className='taple_title'>سير العمل</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    <RowSM index={index} user={user} startTime={startTime} updateDate={updateDate} open={open} />\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccordionTableSm;","import React, { useContext } from 'react';\r\nimport AccordionTableSm from './AccordionTableSm';\r\nimport data from '../../../data.json';\r\nimport { MyContext } from '../../../context';\r\nimport './AllAccordionTableSm.scss'\r\n\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\n\r\nfunction AllAccordionTableSm({ dataUsers, workProcess }) {\r\n    const myContext = useContext(MyContext);\r\n    \r\n    function showAccor() {\r\n        if(myContext.startTimeContext === '' && myContext.endTimeContext === '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n\r\n        } else if(myContext.startTimeContext !== '' && myContext.endTimeContext !== '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n\r\n        } else if(myContext.startTimeContext !== '' && myContext.endTimeContext === '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.startTimeContext) <= new Date(e.startTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n            \r\n        } else if(myContext.startTimeContext === '' && myContext.endTimeContext !== '') {\r\n            if(myContext.workProcessState === '') {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n                \r\n            } else {\r\n                return data.allDates\r\n                .filter(e => new Date(myContext.endTimeContext) >= new Date(e.endTime))\r\n                .filter(e => e.workProcess === myContext.workProcessState)\r\n                .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n            }\r\n        } else {\r\n            return data.allDates\r\n            .map((date,index) => <AccordionTableSm key={date.startTime} index={index} user={dataUsers[index]} startTime={new Date(date.startTime)} updateDate={new Date(date.endTime)} workProcess={date.workProcess} />)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='all_accprdion_table'>\r\n            {showAccor()}\r\n            {showAccor().length === 0 &&  (\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow className='second_cell'>\r\n                                <TableCell align=\"right\" className='taple_title no_item'>لا يوجد عناصر...</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAccordionTableSm\r\n","import React, { useContext } from 'react'\r\nimport { FiFilter } from 'react-icons/fi';\r\nimport data from '../../../data.json';\r\nimport List from '@material-ui/core/List';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md';\r\nimport { BsCalendarEvent } from 'react-icons/bs';\r\nimport { MyContext } from '../../../context';\r\n\r\n\r\n\r\nfunction SidebarSM({ changeHandler, workProcess, startTime, endTime, checked }) {\r\n    const myContext = useContext(MyContext);\r\n\r\n    const list = (anchor) => (\r\n    <div role=\"presentation\">\r\n        <List>\r\n            <div className='sidebar_title'>\r\n                <div className='title'>\r\n                    <h6><FiFilter size={18} color='#444' /> فرز سجل العمليات حسب</h6>\r\n                </div>\r\n            </div>\r\n            <FormControl className='formControl'>\r\n                <NativeSelect value={workProcess} onChange={(event) => changeHandler({name:'setWorkProcess', value: event.target.value}) } name=\"work process\" inputProps={{ 'aria-label': 'work process' }} >\r\n                <option value=''>سير العمل</option>\r\n                {\r\n                    [...new Set([...data.allDates.map(work => work.workProcess)])].map(e => <option key={e} value={e}>{e}</option>)\r\n                }\r\n                </NativeSelect>\r\n                <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n            </FormControl>\r\n            <FormControl className='formControl start_time'>\r\n                <NativeSelect value={startTime} onChange={(event) => changeHandler({name:'setStartTime', value: event.target.value})} name=\"start time\" inputProps={{ 'aria-label': 'start time' }} >\r\n                <option value=''>بداية الوقت</option>\r\n                {\r\n                    data.allDates.map(date => (\r\n                    <option key={date.startTime} value={date.startTime}>\r\n                        {`${new Date(date.startTime).getDate()} ${myContext.arabicMonths[new Date(date.startTime).getMonth()]} ${new Date(date.startTime).getFullYear()} , ${myContext.formatAMPM(new Date(date.startTime))}`}\r\n                    </option>\r\n                    ))\r\n                }\r\n                </NativeSelect>\r\n                <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n                <BsCalendarEvent className='calendar' color='#444' />\r\n            </FormControl>\r\n            <div className='to'>إلى</div>\r\n            <FormControl className='formControl'>\r\n                <NativeSelect value={endTime} onChange={(event) => changeHandler({name:'setEndTime', value: event.target.value})} name=\"end time\" inputProps={{ 'aria-label': 'end time' }} >\r\n                <option value=''>نهاية الوقت</option>\r\n                {\r\n                    data.allDates.map(date => (\r\n                    <option key={date.endTime} value={date.endTime}>\r\n                        {`${new Date(date.endTime).getDate()} ${myContext.arabicMonths[new Date(date.endTime).getMonth()]} ${new Date(date.endTime).getFullYear()} , ${myContext.formatAMPM(new Date(date.endTime))}`}\r\n                    </option>\r\n                    ))\r\n                }\r\n                </NativeSelect>\r\n                <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n                <BsCalendarEvent className='calendar' color='#444' />\r\n            </FormControl>\r\n            <div className='checkbox_btn'>\r\n                <FormControlLabel\r\n                control={\r\n                    <Checkbox checked={checked} onChange={event => changeHandler({name:'setChecked', value: event.target.checked})} inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                }\r\n                label=\"الإخطاء فقط\"\r\n                />\r\n            </div>\r\n        </List>\r\n    </div>\r\n);\r\n      \r\n\r\n    return (\r\n        <div className='sidebar'>\r\n          {list('left')}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSM\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './History.scss';\r\nimport { CgBox } from 'react-icons/cg';\r\nimport AccordionTable from '../../Components/AccordionTable/AccordionTable';\r\nimport AllAccordionTableSm from '../../Components/AccordionTable/AccordionTableSm/AllAccordionTableSm';\r\nimport { FiFilter } from 'react-icons/fi';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { MdKeyboardArrowDown } from 'react-icons/md';\r\nimport { BsCalendarEvent } from 'react-icons/bs';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Loader from '../../Components/Loader/Loader';\r\nimport data from '../../data.json';\r\nimport { MyContext } from '../../context';\r\nimport SideBarSm from './SidebarSM/SidebarSM';\r\n\r\n\r\n\r\nfunction History() {\r\n  const [workProcess, setWorkProcess] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [checked, setChecked] = useState(true);\r\n  const [dataUsers, setDataUsers] = useState([]);\r\n  const [isLoader, setIsLoader] = useState(false)\r\n  const [drawer, setDrawer] = useState({left: false});\r\n  const myContext = useContext(MyContext);\r\n\r\n\r\n  useEffect(() => {\r\n    let mount = true;\r\n    setIsLoader(true);\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n      if(mount) {\r\n        setIsLoader(false);\r\n        setDataUsers(responseJson)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      setIsLoader(false);\r\n      alert(error)\r\n    });\r\n\r\n    return () => {\r\n      if(mount) {\r\n        mount = false\r\n      }\r\n    }\r\n}, []);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n  if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n    return;\r\n  }\r\n  setDrawer({ left: open });\r\n};\r\n\r\n  const resultsHandler = () => {\r\n    myContext.setWorkProcessState(workProcess);\r\n    myContext.setStartTimeContext(startTime);\r\n    myContext.setEndTimeContext(endTime);\r\n    setDrawer({ left: false })\r\n  }\r\n\r\n  const resetHandler = () => {\r\n    setWorkProcess('');\r\n    setStartTime('');\r\n    setEndTime('');\r\n    myContext.setWorkProcessState('');\r\n    myContext.setStartTimeContext('');\r\n    myContext.setEndTimeContext('');\r\n    setDrawer({ left: false })\r\n  }\r\n\r\nconst list = (anchor) => (\r\n  <div role=\"presentation\">\r\n    <List>\r\n      <div className='sidebar_title'>\r\n        <div className='title'>\r\n          <h6><FiFilter size={18} color='#444' /> فرز سجل العمليات حسب</h6>\r\n          <AiOutlineCloseCircle color='#f55157' size={24} onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)} />\r\n        </div>\r\n      </div>\r\n      <FormControl className='formControl'>\r\n        <NativeSelect value={workProcess} onChange={(event) => setWorkProcess(event.target.value)} name=\"work process\" inputProps={{ 'aria-label': 'work process' }} >\r\n          <option value=''>سير العمل</option>\r\n          {\r\n            [...new Set([...data.allDates.map(work => work.workProcess)])].map(e => <option key={e} value={e}>{e}</option>)\r\n          }\r\n        </NativeSelect>\r\n        <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n      </FormControl>\r\n      <FormControl className='formControl start_time'>\r\n        <NativeSelect value={startTime} onChange={(event) => setStartTime(event.target.value)} name=\"start time\" inputProps={{ 'aria-label': 'start time' }} >\r\n          <option value=''>بداية الوقت</option>\r\n          {\r\n            data.allDates.map(date => (\r\n              <option key={date.startTime} value={date.startTime}>\r\n                {`${new Date(date.startTime).getDate()} ${myContext.arabicMonths[new Date(date.startTime).getMonth()]} ${new Date(date.startTime).getFullYear()} , ${myContext.formatAMPM(new Date(date.startTime))}`}\r\n              </option>\r\n            ))\r\n          }\r\n        </NativeSelect>\r\n        <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n        <BsCalendarEvent className='calendar' color='#444' />\r\n      </FormControl>\r\n      <div className='to'>إلى</div>\r\n      <FormControl className='formControl'>\r\n        <NativeSelect value={endTime} onChange={(event) => setEndTime(event.target.value)} name=\"end time\" inputProps={{ 'aria-label': 'end time' }} >\r\n        <option value=''>نهاية الوقت</option>\r\n          {\r\n            data.allDates.map(date => (\r\n              <option key={date.endTime} value={date.endTime}>\r\n                {`${new Date(date.endTime).getDate()} ${myContext.arabicMonths[new Date(date.endTime).getMonth()]} ${new Date(date.endTime).getFullYear()} , ${myContext.formatAMPM(new Date(date.endTime))}`}\r\n              </option>\r\n            ))\r\n          }\r\n        </NativeSelect>\r\n        <MdKeyboardArrowDown className='down_arrow' color='#444' />\r\n        <BsCalendarEvent className='calendar' color='#444' />\r\n      </FormControl>\r\n      <div className='checkbox_btn'>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox checked={checked} onChange={(e) => setChecked(e.target.checked)} inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n          }\r\n          label=\"الإخطاء فقط\"\r\n        />\r\n      </div>\r\n      <div className='btns_box'>\r\n        <Button onClick={resultsHandler} variant=\"contained\" className='results' color=\"primary\">عرض النتائج</Button>\r\n        <Button onClick={resetHandler} variant=\"contained\" className='reset' color=\"primary\">إعادة تعين</Button>\r\n      </div>\r\n    </List>\r\n  </div>\r\n  );\r\n\r\n    const changeHandler = e => {\r\n      if(e.name === 'setChecked') {\r\n        setChecked(e.value)\r\n      }\r\n      if(e.name === 'setWorkProcess') {\r\n        setWorkProcess(e.value)\r\n        myContext.setWorkProcessState(e.value);\r\n      }\r\n      if(e.name === 'setStartTime') {\r\n        setStartTime(e.value)\r\n        myContext.setStartTimeContext(e.value);\r\n      }\r\n      if(e.name === 'setEndTime') {\r\n        setEndTime(e.value)\r\n        myContext.setEndTimeContext(e.value);\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div className='history'>\r\n      <Drawer left={'left'} open={drawer['left']} onClose={toggleDrawer(false)} className='sidebar'>\r\n        {list('left')}\r\n      </Drawer>\r\n      <div className='filter'>\r\n        <Button onClick={toggleDrawer(true)}>\r\n          <FiFilter color='444' size={20} />\r\n          <span>تصفية</span>\r\n        </Button>\r\n      </div>\r\n      <div className='history_boxes' style={isLoader ? {minHeight: '300px'} : {minHeight: 'auto'}}>\r\n        <h3 className='history_title'><CgBox size={18} /><span>سجل العمليات</span></h3>\r\n        {!isLoader && dataUsers !== undefined && dataUsers.length > 0 && <SideBarSm changeHandler={changeHandler} workProcess={workProcess} startTime={startTime} endTime={endTime} checked={checked} />}\r\n        {isLoader && <Loader smallSize={45} />}\r\n        {\r\n          !isLoader && dataUsers !== undefined && dataUsers.length > 0 && (\r\n            <>\r\n              <AccordionTable dataUsers={dataUsers} workProcess={workProcess} />\r\n              <AllAccordionTableSm dataUsers={dataUsers} workProcess={workProcess} />\r\n            </>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History"],"sourceRoot":""}